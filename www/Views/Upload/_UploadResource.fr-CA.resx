<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonUpload" xml:space="preserve">
    <value>btn-upload-f</value>
  </data>
  <data name="ButtonUploadAlt" xml:space="preserve">
    <value>Téléchargez maintenant!</value>
  </data>
  <data name="filebutton" xml:space="preserve">
    <value>filebuttonF</value>
  </data>
  <data name="Intro" xml:space="preserve">
    <value>Avant de la soumettre, voici quelques points importants dont vous devez vous rappeler :</value>
  </data>
  <data name="LabelCaption" xml:space="preserve">
    <value>Titre de la vidéo ou vignette de photo</value>
  </data>
  <data name="LabelConcent19" xml:space="preserve">
    <value>Je confirme que j’ai obtenu l’autorisation de publier de toute personne de 19 an ou plus qui apparaît dans ma vidéo ou ma photo.</value>
  </data>
  <data name="LabelConcentGuardian" xml:space="preserve">
    <value>Je confirme être le parent ou le tuteur légal de toute personne de 18 ans ou moins qui apparaît dans ma vidéo ou ma photo.</value>
  </data>
  <data name="LabelDescription" xml:space="preserve">
    <value>Si votre vidéo ou photo &lt;strong&gt;n’était pas pris au grand Moncton&lt;/strong&gt;, compléter la phrase suivante en 50 mots ou moins (en français ou en Anglais), “Mon Mémorable Moncton est…”</value>
  </data>
  <data name="LabelFile" xml:space="preserve">
    <value>Cliquez sur «Fureter» pour sélectionner votre fichier</value>
  </data>
  <data name="LabelLocation" xml:space="preserve">
    <value>Si votre vidéo ou photo &lt;strong&gt;c’était pris au grand Moncton&lt;/strong&gt;, s’il vous plait dire nous où c’étais pris, par example sur la rue Main.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Vous êtes prêt à télécharger votre VIDÉO ou PHOTO de votre Mémorable Moncton?</value>
  </data>
  <data name="RequiredFields" xml:space="preserve">
    <value>* Champs obligatoires.</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>Lisez les &lt;a href="/facebook/monctonMomentsSubmission/Home/RulesPopUp" class="rulesPopUp"&gt;règlements officiels&lt;/a&gt; : la section 4 est particulièrement intéressante, puisqu’elle traite des règlements de soumission et des exigences.</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>Assurez-vous que votre vidéo ou photo soit d’un format approprié et qu’elle n’excède pas 250 Mo.</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>La vidéo ou la photo que vous avez soumise sera affichée sur Facebook afin que le public puisse la voir. Si vous avez des questions à ce sujet, vérifiez les &lt;a href="/facebook/monctonMomentsSubmission/Home/RulesPopUp" class="rulesPopUp"&gt;règlements officiels&lt;/a&gt;.</value>
  </data>
  <data name="ValidationCaption" xml:space="preserve">
    <value>Titre de la vidéo ou vignette de photo est obligatoire.</value>
  </data>
  <data name="ValidationConcent19" xml:space="preserve">
    <value>Permission to publish from all individual(s) est obligatoire.</value>
  </data>
  <data name="ValidationConcentGuardian" xml:space="preserve">
    <value>Parent or legal guardian concent est obligatoire.</value>
  </data>
  <data name="ValidationFile" xml:space="preserve">
    <value>A file est obligatoire.</value>
  </data>
  <data name="Help_Formats" xml:space="preserve">
    <value>*Formats photos :&lt;br /&gt;
*Formats vidéo : wmv, 3gp, avi, mov, mp4, mpeg/mpegs, flv ,swf, mkv ou webm</value>
  </data>
  <data name="Help_Step1" xml:space="preserve">
    <value>&lt;strong&gt;Étape 1:&lt;/strong&gt; &lt;br /&gt;Créer votre vidéo* &lt;br /&gt;(maximum de 45 à &lt;br /&gt;90 secondes) ou photo.</value>
  </data>
  <data name="Help_Step2" xml:space="preserve">
    <value>&lt;strong&gt;Étape 2:&lt;/strong&gt; &lt;br /&gt;Téléchargez à votre &lt;br /&gt;ordinateur votre vidéo &lt;br /&gt;ou photo.</value>
  </data>
  <data name="Help_Step3" xml:space="preserve">
    <value>&lt;strong&gt;Étape 3:&lt;/strong&gt; &lt;br /&gt;Soumettez votre vidéo ou &lt;br /&gt;photo grâce à cette application &lt;br /&gt;Facebook Mémorable Moncton.</value>
  </data>
  <data name="Help_Title" xml:space="preserve">
    <value>Comment télécharger</value>
  </data>
  <data name="LabelCityIn" xml:space="preserve">
    <value>Location In Moncton</value>
  </data>
  <data name="LabelCityOut" xml:space="preserve">
    <value>À l'extérieur de la région de Moncton  (Consultez les Règlements officiels pour plus de renseignements)</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Step4" xml:space="preserve">
    <value>Comment télécharger</value>
  </data>
  <data name="ValidationLocation" xml:space="preserve">
    <value>Location est obligatoire.</value>
  </data>
</root>